upstream sleektiv {
	server 127.0.0.1:8069;
}

server {
	listen 80;
	server_name <domain.com>;
	rewrite ^(.*) https://<domain.com>/$1 permanent;
}

server {
	listen 443 ssl;
	server_name <domain.com>;

	proxy_buffers 16 64k;
	proxy_buffer_size 128k;
	proxy_connect_timeout 3600;
	proxy_send_timeout 3600s;
	proxy_read_timeout 3600s;
	proxy_next_upstream error timeout invalid_header http_500 http_502 http_503;

	# SSL parameters
	ssl_certificate path/<crtfile>.crt;
	ssl_certificate_key path/<keyfile>.key;

	# log
	access_log path/<access_log>.log;
	error_log path/<error_log>.log;

	# Redirect websocket requests to sleektiv gevent port
	location /websocket {
		proxy_http_version 1.1;
		proxy_pass http://127.0.0.1:8072/websocket;
		proxy_set_header Upgrade $http_upgrade;
		proxy_set_header Connection "upgrade";
	}

	# Redirect requests to sleektiv backend server
	location / {
		# Add Headers for sleektiv proxy mode
		proxy_set_header X-Forwarded-Host $http_host;
		proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
		proxy_set_header X-Forwarded-Proto $scheme;
		proxy_set_header X-Real-IP $remote_addr;
		proxy_redirect off;
		proxy_pass http://sleektiv;

		add_header 'Access-Control-Allow-Origin' '*' always;
		add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS, HEAD';
		add_header 'Access-Control-Allow-Headers' 'Authorization, Origin, X-Requested-With, Content-Type, Accept';
		add_header Strict-Transport-Security "max-age=31536000; includeSubDomains";
	}

	# common gzip
	gzip_types text/css text/scss text/plain text/xml application/xml application/json application/javascript;
	gzip on;
	client_body_in_file_only clean;
	client_body_buffer_size 32K;
	client_max_body_size 500M;
	sendfile on;
	send_timeout 3600s;
	keepalive_timeout 3600;
}